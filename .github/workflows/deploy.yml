# name: Deploy Docs to Github Page

# env:
#   GITHUB_TOKEN: ${{ secrets.SELF_TOKEN }}

# # Only trigger, when the Release workflow succeeded
# on:
#   push:
#     branches:
#       - main
#   workflow_run:
#     workflows: ['Release']
#     types:
#       - completed

# # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
# permissions:
#   contents: read
#   pages: write
#   id-token: write

# # Allow one concurrent deployment
# concurrency:
#   group: "pages"
#   cancel-in-progress: true

# jobs:
#   # Build job
#   build:
#     runs-on: ubuntu-latest
#     defaults:
#       run:
#         working-directory: apps/docs
#     steps:
#       - name: Checkout Repo
#         uses: actions/checkout@v3
#         with:
#           fetch-depth: 0

#       - name: Print info
#         run: "ls -la"

#       # - name: Setup pnpm
#       #   uses: pnpm/action-setup@v2
#       #   with:
#       #     version: 7

#       # - name: Setup Node.js
#       #   uses: actions/setup-node@v3
#       #   with:
#       #     node-version: 16
#       #     cache: pnpm

#       # - name: Install Dependencies
#       #   run: pnpm install

#       # - name: Restore cache
#       #   run: pnpm clean:cache

#       # - name: Build Packages
#       #   run: pnpm build

#       - name: Setup Pages
#         uses: actions/configure-pages@v2
#         with:
#           # Automatically inject basePath in your Next.js configuration file and disable
#           # server side image optimization (https://nextjs.org/docs/api-reference/next/image#unoptimized).
#           #
#           # You may remove this line if you want to manage the configuration yourself.
#           static_site_generator: next
#           # generator_config_file: './apps/docs/next.config.js'
#           # token: $GITHUB_TOKEN
#   #     - name: Static HTML export with Next.js
#   #       run: cd ./apps/docs && next export
#   #     - name: Upload artifact
#   #       uses: actions/upload-pages-artifact@v1
#   #       with:
#   #         path: ./apps/docs/dist

#   # # Deployment job
#   # deploy:
#   #   environment:
#   #     name: github-pages
#   #     url: ${{ steps.deployment.outputs.page_url }}
#   #   runs-on: ubuntu-latest
#   #   needs: build
#   #   steps:
#   #     - name: Deploy to GitHub Pages
#   #       id: deployment
#   #       uses: actions/deploy-pages@v1
#   #       with:
#   #         token: $GITHUB_TOKEN


# Sample workflow for building and deploying a Next.js site to GitHub Pages
#
# To get started with Next.js see: https://nextjs.org/docs/getting-started
#
name: Deploy Next.js site to Pages

on:
  workflow_run:
    workflows: ['Release']
    types:
      - completed

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: apps/docs
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "::set-output name=manager::yarn"
            echo "::set-output name=command::install"
            echo "::set-output name=runner::yarn"
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "::set-output name=manager::pnpm"
            echo "::set-output name=command::ci"
            echo "::set-output name=runner::pnpx --no-install"
            exit 0
          else
            echo "Unable to determine packager manager"
            exit 1
          fi
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: ${{ steps.detect-package-manager.outputs.manager }}
      - name: Setup Pages
        uses: actions/configure-pages@v2
        with:
          # Automatically inject basePath in your Next.js configuration file and disable
          # server side image optimization (https://nextjs.org/docs/api-reference/next/image#unoptimized).
          #
          # You may remove this line if you want to manage the configuration yourself.
          static_site_generator: next
      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
      - name: Build with Next.js
        run: ${{ steps.detect-package-manager.outputs.runner }} next build
      - name: Static HTML export with Next.js
        run: ${{ steps.detect-package-manager.outputs.runner }} next export
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./dist

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1