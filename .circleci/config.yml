# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  # The Node.js orb contains a set of prepackaged CircleCI configuration you can utilize
  # Orbs reduce the amount of configuration required for common tasks.
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/node
  node: circleci/node@5.0.2

jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build:
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/node
    docker:
      - image: cimg/node:lts-browsers
    # Then run your tests!
    # CircleCI will report the results back to your VCS provider.
    steps:
      # Checkout the code as the first step.
      - checkout
      # Next, the node orb's install-packages step will install the dependencies from a package.json.
      # The orb install-packages step will also automatically cache them for faster future runs.
      - node/install-packages:
          # If you are using yarn, change the line below from "npm" to "yarn"
          pkg-manager: yarn
      - run:
          name: Build packages
          command: yarn build
      - persist_to_workspace:
          root: .
          paths:
            - packages/constant/dist
            - packages/ui/dist
  
  release:
    docker:
      - image: cimg/node:lts
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - run: git config --global user.email ${GITHUB_EMAIL}
      - run: git config --global user.name ${GITHUB_USER}
      - run:
          name: Generate changelogrc
          command: yarn changelog:gen
      - run:
          name: Generate packages changelogs
          command: yarn changeset version
      - run:
          name: Publish packages and create releases
          command: |
            npm config set //registry.npmjs.org/:_authToken=$NPM_TOKEN
            yarn run changeset:publish

  changelog:
    docker:
      - image: cimg/node:lts
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - run: git config --global user.email ${GITHUB_EMAIL}
      - run: git config --global user.name ${GITHUB_USER}
      - run:
          name: Generate changelog files
          command: yarn changelog:write
      - run:
          name: Commit changelog files
          command: |
            git add . && yarn run format
            git diff --staged --quiet || git commit -am "docs: update changelog on repository and website" && git push origin ${CIRCLE_BRANCH}

workflows:
  version: 2
  eoms-build:
    jobs:
      - build
      - release:
          requires:
            - build
          filters:
            branches:
              only:
                - main
  eoms-changelog:
    triggers:
      - schedule:
          cron: '30 1 * * *'
          filters:
            branches:
              only:
                - main
    jobs:
      - changelog
